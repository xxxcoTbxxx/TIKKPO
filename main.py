import json
import operator


product = {
        "Молочные": [
            {"name": "Сметана", "калории": 206, "белки": 2.5, "жиры": 20, "углеводы": 3.4},
            {"name": "Молоко", "калории": 49, "белки": 3, "жиры": 2, "углеводы": 4.7},
            {"name": "Снежок", "калории": 78, "белки": 2.8, "жиры": 11, "углеводы": 11},
            {"name": "Йогурт", "калории": 67, "белки": 2.8, "жиры": 4, "углеводы": 4.2},
            {"name": "Сыр", "калории": 80.6, "белки": 11, "жиры": 2.5, "углеводы": 3.8}
        ],
        "Сладости": [
            {"name": "Халва", "калории": 509.6, "белки": 12.7, "жиры": 29.9, "углеводы": 50.6},
            {"name": "Шоколад", "калории": 720.5, "белки": 5, "жиры": 73.6, "углеводы": 10.8},
            {"name": "Конфеты", "калории": 245.1, "белки":  6.7, "жиры": 2.2, "углеводы": 49.3},
            {"name": "Нутелла", "калории": 551.9, "белки": 21.9, "жиры": 44.2, "углеводы": 16.3},
            {"name": "Печеньки", "калории": 97.4, "белки": 9.8, "жиры": 1.5,  "углеводы": 16.7},
        ],
        "Овощи": [
            {"name": "Тыква", "калории": 27, "белки": 1, "жиры": 0.5, "углеводы": 3.9},
            {"name": "Морковь", "калории": 35, "белки": 1.3, "жиры": 0.1,  "углеводы": 6.9},
            {"name": "Кабачок", "калории": 22, "белки": 1, "жиры": 0.1, "углеводы": 4.4},
            {"name": "Помидор", "калории": 23, "белки": 1.2, "жиры": 0.2, "углеводы": 4},
            {"name": "Огурец", "калории": 15, "белки": 0.7, "жиры": 0.1, "углеводы": 3.1},
        ],
        "Фрукты": [
            {"name": "Яблоко", "калории": 47, "белки": 0.4, "жиры": 0.4, "углеводы": 9.8},
            {"name": "Банан", "калории": 96, "белки": 1.5, "жиры": 0.5, "углеводы": 21},
            {"name": "Киви", "калории": 52, "белки": 0.3, "жиры": 0.1, "углеводы": 11.8},
            {"name": "Манго", "калории": 60, "белки": 0.8, "жиры": 0.4, "углеводы": 13.4},
            {"name": "Мандарин", "калории": 43 , "белки": 0.9, "жиры": 0.2, "углеводы": 8.1},
        ],
        "Мясо": [
            {"name": "Рыба", "калории": 59.8, "белки": 8.8, "жиры": 1, "углеводы": 3.8},
            {"name": "Свинина", "калории": 357.4, "белки": 15, "жиры": 32.9, "углеводы": 0.4},
            {"name": "Говядина", "калории": 218, "белки": 18.6, "жиры": 16, "углеводы": 0},
            {"name": "Курица", "калории": 167, "белки": 19.5, "жиры": 9.9, "углеводы": 0},
            {"name": "Баранина", "калории": 209, "белки": 15.6, "жиры": 16.3, "углеводы": 0},
        ]
    }

def ChoiceProducts(category, catalog):
    print()
    print("Продукты категории:\n")
    try:
        prod = product.get(category)
        for i in prod:
            print(i["name"])
    except:
        print("Не найдено")
        return

    while True:
        prod_found = False
        prod_people = input("\nВведите продукт: ")
        for i in prod:
            if i["name"].lower() != prod_people.lower():
                continue
            else:
                prod_found = True
                gram = int(input("Количество потребляемых грамм: "))
                catalog.append(Math(i, gram))
        if (prod_found == False):
            print("Такого продукта нет!\n")

        if (int(input("Продолжить выбор продуктов этой категории - 1\n Назад - 0\n"))) == 0:
            break

def Math(product, gram):
    customer_product_calories = product
    for i in product:
        if i != "name":
            product[i] = round(product[i] / 100 * gram, 2)
    customer_product_calories["grams"] = gram
    return customer_product_calories

def Sort(catalog):
    key_name = input("""Сортировать по:\n- калориям\n- белкам\n- жирам\n- углеводам\n""")
    catalog.sort(key=operator.itemgetter(key_name.lower()))
    print(*catalog, sep="\n")

def JsonFile(catalog):
    with open('Ration.json', 'w', encoding='utf8') as file:
        json.dump(catalog, file)



if __name__ == '__main__':
    catalog = []
    while True:

        category = input("Выберите категорию: \nМолочные \nСладости\nОвощи\nФрукты\nМясо\n2 - сортировать по полезности\n3 - посмотреть рацион\n")

        if category == "2":
            Sort(catalog)
        elif category == "3":
            print(*catalog, sep="\n")
            JsonFile(catalog)
            print()

        else:
            ChoiceProducts(category.title(), catalog)
            print(*catalog, sep="\n")
            print()